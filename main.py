from core.orchestrator import TherapyOrchestrator
from rich.console import Console
from rich.panel import Panel
from rich.table import Table
from rich import print as rprint

console = Console()

def main():
    console.print("\n[bold cyan]üß† –ú—É–ª—å—Ç–∏–∞–≥–µ–Ω—Ç–Ω–∞—è –¢–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–∞—è –°–∏—Å—Ç–µ–º–∞[/bold cyan]")
    console.print("[yellow]" + "="*60 + "[/yellow]")
    console.print("[red]‚ö†Ô∏è  –≠—Ç–æ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è, –Ω–µ –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è[/red]")
    console.print("[dim]–ö–æ–º–∞–Ω–¥—ã: '–≤—ã—Ö–æ–¥' - –∑–∞–≤–µ—Ä—à–∏—Ç—å, '–ø–∞–º—è—Ç—å' - –ø–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Å–∞–π—Ç—ã[/dim]\n")
    
    orchestrator = TherapyOrchestrator(use_memory=True)
    session_id = orchestrator.start_session()
    
    console.print(f"[green]‚úì –°–µ—Å—Å–∏—è –Ω–∞—á–∞—Ç–∞ (ID: {session_id})[/green]\n")
    
    while True:
        user_input = console.input("[bold blue]–í—ã:[/bold blue] ").strip()
        
        if user_input.lower() in ['–≤—ã—Ö–æ–¥', 'exit', 'quit']:
            console.print("\n[yellow]üëã –°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ë–µ—Ä–µ–≥–∏—Ç–µ —Å–µ–±—è![/yellow]")
            break
        
        if user_input.lower() in ['–ø–∞–º—è—Ç—å', 'memory']:
            insights = orchestrator.get_session_insights()
            if insights:
                table = Table(title="üìö –ò–Ω—Å–∞–π—Ç—ã –°–µ—Å—Å–∏–∏")
                table.add_column("–¢–∏–ø", style="cyan")
                table.add_column("–ò–Ω—Å–∞–π—Ç", style="white")
                table.add_column("–ü–æ–¥—Ö–æ–¥", style="green")
                
                for ins in insights[:5]:
                    table.add_row(
                        ins['type'].upper(),
                        ins['insight'],
                        ins['approach']
                    )
                
                console.print(table)
            else:
                console.print("[dim]–ü–æ–∫–∞ –Ω–µ—Ç –∏–Ω—Å–∞–π—Ç–æ–≤[/dim]")
            continue
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        with console.status("[yellow]–û–±—Ä–∞–±–æ—Ç–∫–∞...[/yellow]"):
            result = orchestrator.process_message(user_input)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ—Ç–∞–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        approach_colors = {
            "DBT": "blue",
            "IFS": "magenta",
            "TRE": "green"
        }
        color = approach_colors.get(result['approach'], 'white')
        
        panel = Panel(
            result['response'],
            title=f"[{color}]{result['approach']}[/{color}] –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç",
            subtitle=f"[dim]{result['reasoning']} (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {result['confidence']:.0%})[/dim]"
        )
        console.print(panel)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å–∞–π—Ç—ã –µ—Å–ª–∏ –µ—Å—Ç—å
        if result.get('insights') and result['insights'].get('insights'):
            rprint(f"[dim]üí° –ò–Ω—Å–∞–π—Ç—ã: {', '.join(result['insights']['insights'])}[/dim]")

if __name__ == "__main__":
    main()